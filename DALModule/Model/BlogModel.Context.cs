//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DALModule.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BlogEntities : DbContext
    {
        public BlogEntities()
            : base("name=BlogEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Blogs> Blogs { get; set; }
        public virtual DbSet<Categories> Categories { get; set; }
        public virtual DbSet<Posts> Posts { get; set; }
        public virtual DbSet<Users> Users { get; set; }
    
        public virtual ObjectResult<ActiveUsers_Result> ActiveUsers(Nullable<int> topRows)
        {
            var topRowsParameter = topRows.HasValue ?
                new ObjectParameter("TopRows", topRows) :
                new ObjectParameter("TopRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ActiveUsers_Result>("ActiveUsers", topRowsParameter);
        }
    
        public virtual ObjectResult<string> ExcepCategories(Nullable<int> aUserId, Nullable<int> bUserId)
        {
            var aUserIdParameter = aUserId.HasValue ?
                new ObjectParameter("AUserId", aUserId) :
                new ObjectParameter("AUserId", typeof(int));
    
            var bUserIdParameter = bUserId.HasValue ?
                new ObjectParameter("BUserId", bUserId) :
                new ObjectParameter("BUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ExcepCategories", aUserIdParameter, bUserIdParameter);
        }
    }
}
